{"version":3,"sources":["context/posContext.js","environments/environments.js","services/pedidoService.js","services/paymentService.js","context/authContext.js","context/posState.js","modules/pos/pages/components/PosHeader.js","modules/pos/pages/components/PosModalInvoice.js","modules/pos/pages/terminal/components/PosBoletaItem.js","modules/pos/pages/terminal/components/PosBoleta.js","services/categoriaService.js","modules/pos/pages/terminal/components/PosCategoria.js","modules/pos/pages/terminal/components/PosCategorias.js","services/mesaService.js","modules/pos/pages/terminal/components/PosMesa.js","modules/pos/pages/terminal/components/PosMesas.js","modules/pos/pages/terminal/components/PosPlato.js","modules/pos/pages/terminal/components/PosPlatos.js","modules/pos/pages/terminal/PosTerminalScreen.js","modules/pos/PosRouter.js","modules/admin/components/AdminHeader.js","modules/admin/pages/dashboard/AdminDashboardScreen.js","modules/admin/components/AdminModalEditarMesa.js","modules/admin/components/AdminModalCrearMesa.js","modules/admin/pages/mesa/AdminMesaScreen.js","modules/admin/pages/pedido/AdminPedidoScreen.js","services/platoService.js","modules/admin/pages/plato/AdminPlatoCrearScreen.js","modules/admin/pages/plato/AdminPlatoScreen.js","modules/admin/AdminRouter.js","services/authService.js","components/GlobalLoading.js","modules/auth/pages/AuthLoginScreen.js","modules/auth/AuthRouter.js","context/authReducer.js","context/authState.js","PrivateRoute.js","modules/guest/pages/GuestHomeScreen.js","modules/guest/GuestRouter.js","App.js","index.js"],"names":["PosContext","createContext","URL_BACKEND","postPedido","objPedido","a","axios","post","JSON","stringify","headers","rpta","getPedidos","get","postInitPointPayment","objPago","AuthContext","withRouter","props","useState","objMesaGlobal","setObjMesaGlobal","objCategoriaGlobal","setObjCategoriaGlobal","pedidos","setPedidos","usu_id","useContext","pagarContext","tipo","datosPersonales","fecha","Date","fechaPedido","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","find","mesa_id","platos","map","objPlato","plato_id","pedidoplato_cant","plato_cant","objPedidoFinal","pedido_fech","pedido_nro","uuidv4","pedido_est","pedidoplatos","console","log","data","ok","pedidosRestantes","filter","pedido_id","content","comprador","name","surname","email","phone","area_code","number","telefono","identification","type","dni","address","zip_code","street_name","direccion","street_number","then","rptaPayment","document","location","Provider","value","modificarPlatoContext","accion","pedidosActuales","posPlatoEncontrado","findIndex","objPlatoPedido","splice","length","pedido","push","children","PosHeader","usu_nom","cerrarSesion","className","src","alt","placeholder","onClick","PosModalInvoice","mostrar","setMostrar","setDatosPersonales","objPedidoActual","total","reduce","prev","plato_pre","toFixed","boletaNro","uuidV4","boletaRef","useRef","handleChange","e","target","Modal","show","onHide","size","Header","closeButton","Title","Body","ref","htmlFor","onChange","maxLength","i","plato_nom","Footer","trigger","current","PosBoletaItem","objItem","PosBoleta","items","mesa_nro","getCategorias","getPlatosByCategoriaId","categoria_id","PosCategoria","objCategoria","categoria_nom","PosCategorias","categorias","setCategorias","useEffect","getMesas","putMesaById","objMesa","put","postMesa","deleteMesaById","delete","PosMesa","PosMesas","mesas","setMesas","PosPlato","plato_img","PosPlatos","setPlatos","Platos","search","window","hash","split","params","URLSearchParams","Swal","fire","icon","title","text","timer","allowOutsideClick","showConfirmButton","history","replace","PosRouter","path","AdminHeader","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","activeClassName","exact","Form","inline","Button","AdminDashboardScreen","totalMoney","setTotalMoney","labels","valores","pedidoPlatos","setPedidoPlatos","datasets","label","backgroundColor","borderColor","borderWidth","dataLine","socket","socketIOClient","on","dataJSON","parse","pedidoPlatosTmp","pedidosCompletos","slice","PedidoPlatos","objPedidoPlato","Plato","totales","total_caja","emit","disconnect","style","minHeight","height","AdminModalEditarMesa","mostrarModalEditar","setMostrarModalEditar","objMesaEditar","traerMesas","formulario","setFormulario","onSubmit","preventDefault","alert","disabled","mesa_cap","formularioVacio","AdminModalCrearMesa","mostrarModalCrear","setMostrarModalCrear","AdminMesaScreen","cargando","setCargando","columns","field","rows","setObjMesaEditar","mounted","setMounted","eliminarMesa","showCancelButton","isConfirmed","mesasFormateadas","posicion","acciones","AdminPedidoScreen","datos","setDatos","filas","Mesa","usu_nombre","Usuario","usu_ape","getPlatos","postPlato","postUploadImagenByPlatoId","file","miFormData","FormData","append","AdminPlatoCrearScreen","imagenRef","files","rpta2","accept","platosInicial","AdminPlatoScreen","width","Categorium","bordered","hover","striped","AdminRouter","postLogin","objLogin","postVerificar","token","GlobalLoading","display","alignItems","justifyContent","flexDirection","zIndex","position","left","top","class","correo","password","iniciarSesionContext","payloadString","payloadDecoded","atob","payloadJSON","usu_tipo","AuthRouter","authReducer","stateAntiguo","payload","action","localStorage","removeItem","autenticado","initialState","useReducer","state","setState","setItem","payloadStringDecript","payloadJson","getItem","catch","error","iniciarSesionConLocalStorage","PrivateRoute","startsWith","GuestHomeScreen","GuestRouter","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.717cae8c.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\nconst PosContext = createContext();\r\nexport default PosContext;","export const URL_BACKEND = \"https://punto-de-venta-codigo-backend.herokuapp.com/\";\r\n// export const URL_BACKEND = \"http://localhost:5000\";","import axios from \"axios\";\r\nimport { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const postPedido = async (objPedido) => {\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/pedido`,\r\n    JSON.stringify(objPedido),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    });\r\n  return rpta;\r\n}\r\n\r\nexport const getPedidos = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/pedido`);\r\n  return rpta;\r\n}","import axios from \"axios\"\r\nimport { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const postInitPointPayment = async (objPago) => {\r\n  const rpta = await axios.post(`${URL_BACKEND}/mercadopago`, JSON.stringify(objPago), {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  })\r\n  return rpta;\r\n}","import { createContext } from \"react\"\r\nconst AuthContext = createContext();\r\nexport default AuthContext;","import React, { useState, useContext } from 'react'\r\nimport PosContext from './posContext'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { postPedido } from '../services/pedidoService';\r\nimport { postInitPointPayment } from '../services/paymentService';\r\nimport AuthContext from './authContext';\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst PosState = (props) => {\r\n\r\n  const [objMesaGlobal, setObjMesaGlobal] = useState(null);\r\n  const [objCategoriaGlobal, setObjCategoriaGlobal] = useState(null);\r\n  const [pedidos, setPedidos] = useState([]);\r\n  const { usu_id } = useContext(AuthContext);\r\n\r\n\r\n\r\n  const modificarPlatoContext = (objPlato, accion) => {\r\n    // obntener una copia del estado de pedidos\r\n    let pedidosActuales = [...pedidos]\r\n    //1. Verificar si tenemos una mesa global seleccionada para agregar el plato\r\n    // en caso contrario no hacer nada.\r\n    if (!objMesaGlobal) { return; }\r\n\r\n    // 2. Preguntamos si el arreglo de pedidos, ya tiene un pedido pendiente\r\n    // en la mesa global seleccionada\r\n    let objPedido = pedidosActuales.find((objPedido) => objMesaGlobal.mesa_id === objPedido.mesa_id);\r\n    if (objPedido) {\r\n      //  Ya había un pedido para la mesa global seleccionada\r\n      // Si hemos encontrado un objPedido, no implica que el plato que queremos agregar\r\n      // esté previamente en el arreglo de platos de dicho pedido\r\n      // Recorriendo el arreglo de platos para ver si encontramos un plato igual\r\n      // al que queremos agregar\r\n      let posPlatoEncontrado = objPedido.platos.findIndex((objPlatoPedido) => objPlatoPedido.plato_id === objPlato.plato_id);\r\n\r\n      // si existía un plato igual al que queremos agregar?\r\n      if (posPlatoEncontrado >= 0) {\r\n\r\n        if (accion === \"sumar\") {\r\n          // significa que el plato sí existía en una posición del arerglo de platos del objPedido\r\n          // agregar una unidad del nuevo plato al pedido\r\n          objPedido.platos[posPlatoEncontrado].plato_cant++;\r\n          setPedidos(pedidosActuales);\r\n        } else {\r\n          // En caso de querer restar un plato, hay que verificar que debemos tener \r\n          // más de una unidad de ese plato o en caso contrario, borrar el plato del arreglo de platos\r\n          if (objPedido.platos[posPlatoEncontrado].plato_cant > 1) {\r\n            objPedido.platos[posPlatoEncontrado].plato_cant--;\r\n            setPedidos(pedidosActuales);\r\n          } else {\r\n            // en caso habría una unidad del plato encontrado, borrar dicho plato del arreglo\r\n            objPedido.platos.splice(posPlatoEncontrado, 1);\r\n\r\n            // // Como quiera que acabamos de borrar un plato del pedido actual, es posible\r\n            // // que dicho plato sea el último o único de ese pedido, conclusión, debemos de \r\n            // // borrar ese objPedido\r\n            if (objPedido.platos.length === 0) {\r\n              pedidosActuales = pedidosActuales.filter((pedido) => pedido.mesa_id !== objMesaGlobal.mesa_id);\r\n            }\r\n\r\n\r\n            setPedidos(pedidosActuales);\r\n          }\r\n\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (accion === \"sumar\") {\r\n          // es el primer plato en un pedido que ya existia en la mesa global seleccionada\r\n          objPedido.platos.push({\r\n            ...objPlato,\r\n            plato_cant: 1\r\n          });\r\n          //OJO: objPedido, representa a uno de los elementos del arreglo \"pedidosActuales\"\r\n          // Nosotros acabamos de modificar el \"objPedido\" agregándole un nuevo plato a su arreglo de\r\n          // \"platos\".\r\n          // Cuando \"objPedido\" es modificado, éste guarda la dirección de memoria del \"objPedido\" al que\r\n          // representa dentro del arreglo \"pedidosActuales\",\r\n          // Conclusión:\r\n          //Cuando modificamos \"objPedido\", internamente se modifica el \"objPedido\" del arreglo \r\n          // \"pedidosActuales\", por eso, volvemos a actualizar el arreglo \"pedidosActuales\"\r\n          setPedidos(pedidosActuales);\r\n        } else {\r\n          // en caso de no encontrar un plato a \"restar\" en el pedido, no se hace nada.\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n    } else {\r\n      if (accion === \"sumar\") {\r\n        // No había ningún pedido para la mesa global selecciona (es un nuevo pedido)\r\n        pedidosActuales.push({\r\n          usu_id: 0,\r\n          mesa_id: objMesaGlobal.mesa_id,\r\n          pedido_est: \"pendiente\",\r\n          platos: [\r\n            {\r\n              ...objPlato,\r\n              plato_cant: 1\r\n            }\r\n          ]\r\n        });\r\n        setPedidos(pedidosActuales);\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  const pagarContext = async (tipo, datosPersonales = {}) => {\r\n    // {\r\n    //   \"pedido_fech\": \"string\", ejm: 2020-11-05 22:01:56\r\n    //   \"pedido_nro\": \"string\",\r\n    //   \"pedido_est\": \"string\",\r\n    //   \"usu_id\": 0,\r\n    //   \"mesa_id\": 0,\r\n    //   \"pedidoplatos\": [\r\n    //     {\r\n    //       \"plato_id\": 0,\r\n    //       \"peditoplato_cant\": 0\r\n    //     }\r\n    //   ]\r\n    // }\r\n    let fecha = new Date();\r\n\r\n    let fechaPedido = fecha.getFullYear() + \"-\" +\r\n      (fecha.getMonth() + 1) + \"-\" + fecha.getDate() + \" \" +\r\n      fecha.getHours() + \":\" + fecha.getMinutes() + \":\" + fecha.getSeconds()\r\n\r\n    // encontrar el pedido del cual quiero hacer el pago\r\n    let objPedido = pedidos.find(objPedido => objMesaGlobal.mesa_id === objPedido.mesa_id)\r\n    //  armar el arreglo de platos para enviar al backend\r\n    let platos = objPedido.platos.map((objPlato) => {\r\n      return {\r\n        plato_id: objPlato.plato_id,\r\n        pedidoplato_cant: objPlato.plato_cant\r\n      }\r\n    });\r\n\r\n    let objPedidoFinal = {\r\n      pedido_fech: fechaPedido,\r\n      pedido_nro: uuidv4(),\r\n      pedido_est: \"pagado\",\r\n      usu_id: usu_id,\r\n      mesa_id: objMesaGlobal.mesa_id,\r\n      pedidoplatos: platos\r\n    }\r\n\r\n    console.log(objPedidoFinal);\r\n\r\n\r\n    const rpta = await postPedido(objPedidoFinal);\r\n    console.log(rpta);\r\n\r\n    if (rpta.data.ok) {\r\n\r\n      if (tipo === \"efectivo\") {\r\n\r\n        // borrar el pedido de la mesa actual\r\n        let pedidosRestantes = pedidos.filter(objPedido => objPedido.mesa_id !== objMesaGlobal.mesa_id);\r\n        setPedidos([...pedidosRestantes]);\r\n        setObjMesaGlobal(null);\r\n        return true;\r\n      } else {\r\n        // pago con visa\r\n\r\n        let { pedido_id } = rpta.data.content;\r\n\r\n        let objPago = {\r\n          pedido_id,\r\n          comprador: {\r\n            name: datosPersonales.name,\r\n            surname: datosPersonales.surname,\r\n            email: \"test_user_46542185@testuser.com\",\r\n            phone: {\r\n              area_code: \"54\",\r\n              number: +datosPersonales.telefono,\r\n            },\r\n            identification: {\r\n              type: \"DNI\",\r\n              number: datosPersonales.dni,\r\n            },\r\n            address: {\r\n              zip_code: \"04000\",\r\n              street_name: datosPersonales.direccion,\r\n              street_number: 100\r\n            }\r\n          }\r\n        }\r\n        // let pedidosRestantes = pedidos.filter(objPedido => objPedido.mesa_id !== objMesaGlobal.mesa_id);\r\n        // setPedidos([...pedidosRestantes]);\r\n        // setObjMesaGlobal(null);\r\n        postInitPointPayment({ ...objPago }).then(rptaPayment => {\r\n          if (rptaPayment.data.ok) {\r\n            document.location = rptaPayment.data.content\r\n          }\r\n        })\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <PosContext.Provider value={{\r\n      pagarContext,\r\n      objMesaGlobal,\r\n      objCategoriaGlobal,\r\n      pedidos,\r\n      setObjMesaGlobal,\r\n      setObjCategoriaGlobal,\r\n      modificarPlatoContext\r\n    }}>\r\n      {props.children}\r\n    </PosContext.Provider>\r\n  )\r\n}\r\n\r\nexport default withRouter(PosState);\r\n","import React, { useContext } from 'react'\r\nimport AuthContext from '../../../../context/authContext';\r\n\r\nconst PosHeader = () => {\r\n\r\n  const { usu_nom, cerrarSesion } = useContext(AuthContext);\r\n\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <img src=\"/imagenes/logo.svg\" alt=\"\" />\r\n      </div>\r\n      <div className=\"header__buscador\">\r\n        <img src=\"/imagenes/search.svg\" alt=\"\" />\r\n        <input type=\"text\" className=\"header__input\" placeholder=\"Busca un término\" />\r\n      </div>\r\n      <div className=\"header__usuario\">\r\n        <img src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n        <span>{usu_nom}</span>\r\n        <button className=\"btn btn-danger\" onClick={() => {\r\n          cerrarSesion();\r\n          // \r\n        }}>\r\n          Cerrar Sesión\r\n        </button>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PosHeader\r\n","import React, { useContext, useRef, useState } from 'react'\r\nimport { Modal } from \"react-bootstrap\";\r\nimport PosContext from '../../../../context/posContext';\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { v4 as uuidV4 } from \"uuid\"\r\n\r\nconst PosModalInvoice = ({ mostrar, setMostrar }) => {\r\n\r\n  const { pedidos, objMesaGlobal, pagarContext } = useContext(PosContext);\r\n  const [datosPersonales, setDatosPersonales] = useState({\r\n    name: \"s/n\",\r\n    surname: \"s/a\",\r\n    email: \"nomail@mail.com\",\r\n    telefono: 0,\r\n    dni: \"11111111\",\r\n    direccion: \"s/d\",\r\n  })\r\n\r\n  let objPedidoActual = pedidos.find(objPedido => objPedido.mesa_id === objMesaGlobal?.mesa_id);\r\n  let total = 0\r\n  if (objPedidoActual) {\r\n    total = (objPedidoActual.platos.reduce((prev, objPlato) => {\r\n      return prev + (+objPlato.plato_pre * objPlato.plato_cant)\r\n    }, 0)).toFixed(2);\r\n  }\r\n\r\n  let boletaNro = uuidV4()\r\n\r\n  const boletaRef = useRef();\r\n\r\n  const handleChange = e => {\r\n    setDatosPersonales({\r\n      ...datosPersonales,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    objPedidoActual ? (\r\n      <Modal show={mostrar} onHide={() => { setMostrar(false) }} size={\"xl\"} >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Boleta</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n          <div className=\"container\" ref={boletaRef}>\r\n            <div className=\"col-md-12\">\r\n              <div className=\"invoice\">\r\n                <div className=\"invoice-company text-inverse f-w-600\">\r\n                  <h4 className=\"display-4\">\r\n                    Codi<span className=\"text-danger\">Go</span>\r\n                  </h4>\r\n                </div>\r\n\r\n\r\n                <div className=\"invoice-header\">\r\n                  <div className=\"invoice-from\">\r\n                    <small>to</small>\r\n                    <address className=\"m-t-5 m-b-5\">\r\n                      <strong className=\"text-inverse\">Company Name</strong><br />\r\n                    Street Address<br />\r\n                    City, Zip Code<br />\r\n                    Phone: (123) 456-7890<br />\r\n                    Fax: (123) 456-7890\r\n                    </address>\r\n                  </div>\r\n                  <div className=\"invoice-to\">\r\n                    <small>to</small>\r\n                    <address className=\"m-t-5 m-b-5\">\r\n                      <strong className=\"text-inverse\">Company Name</strong><br />\r\n                    Street Address<br />\r\n                    City, Zip Code<br />\r\n                    Phone: (123) 456-7890<br />\r\n                    Fax: (123) 456-7890\r\n                    </address>\r\n                  </div>\r\n                  <div className=\"invoice-date\">\r\n                    <small>Fecha</small>\r\n                    <div className=\"date text-inverse m-t-5\">Abril, 28, 21'</div>\r\n                    <div className=\"invoice-detail\">\r\n                      {boletaNro}<br />\r\n                    Boleta Electrónica\r\n                    </div>\r\n                  </div>\r\n                  <form className=\"row\">\r\n                    <div className=\"form-group col-md-2\">\r\n                      <label htmlFor=\"\">Nombre:</label>\r\n                      <input type=\"text\" className=\"form-control form-control-sm\"\r\n                        name=\"name\" value={datosPersonales.name} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-2\">\r\n                      <label htmlFor=\"\">Apellido:</label>\r\n                      <input type=\"text\" className=\"form-control form-control-sm\"\r\n                        name=\"surname\" value={datosPersonales.surname} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-2\">\r\n                      <label htmlFor=\"\">Email:</label>\r\n                      <input type=\"email\" className=\"form-control form-control-sm\"\r\n                        name=\"email\" value={datosPersonales.email} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-1\">\r\n                      <label htmlFor=\"\">Teléfono:</label>\r\n                      <input type=\"number\" maxLength=\"7\" className=\"form-control form-control-sm\"\r\n                        name=\"telefono\" value={datosPersonales.telefono} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-2\">\r\n                      <label htmlFor=\"\">Dni:</label>\r\n                      <input type=\"text\" className=\"form-control form-control-sm\"\r\n                        name=\"dni\" value={datosPersonales.dni} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label htmlFor=\"\">Dirección:</label>\r\n                      <input type=\"text\" className=\"form-control form-control-sm\"\r\n                        name=\"direccion\" value={datosPersonales.direccion} onChange={handleChange} />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n\r\n                <div className=\"invoice-content\">\r\n\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-invoice\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>#</th>\r\n                          <th>Cant.</th>\r\n                          <th>Descripción</th>\r\n                          <th>P.Unitario</th>\r\n                          <th>P.Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n\r\n                        {\r\n                          objPedidoActual.platos.map((objPlato, i) => {\r\n                            return (\r\n                              <tr key={objPlato.plato_id}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{objPlato.plato_cant}</td>\r\n                                <td>{objPlato.plato_nom}</td>\r\n                                <td>S/ {objPlato.plato_pre}</td>\r\n                                <td>S/ {+objPlato.plato_pre * +objPlato.plato_cant}</td>\r\n                              </tr>\r\n                            )\r\n                          })\r\n                        }\r\n\r\n\r\n\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"invoice-price\">\r\n                    <div className=\"invoice-price-left\">\r\n                      <div className=\"invoice-price-row\">\r\n                        <div className=\"sub-price\">\r\n                          <small>SUBTOTAL</small>\r\n                          <span className=\"text-inverse\">S/ {(total * 0.82).toFixed(2)}</span>\r\n                        </div>\r\n                        <div className=\"sub-price\">\r\n                          <i className=\"fa fa-plus text-muted\"></i>\r\n                        </div>\r\n                        <div className=\"sub-price\">\r\n                          <small>IGV (18%)</small>\r\n                          <span className=\"text-inverse\">S/ {(total * 0.18).toFixed(2)}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"invoice-price-right\">\r\n                      <small>TOTAL</small> <span className=\"f-w-600\">S/ {total}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"invoice-note\">\r\n                  * La boleta será enviada a su correo electrónico<br />\r\n                  * Revise su vuelto antes de retirarse de nuestras instalaciones<br />\r\n                  * Si tiene alguna consulta, envíe un correo a jorgegarba@gmail.com\r\n                </div>\r\n\r\n\r\n                <div className=\"invoice-footer\">\r\n                  <p className=\"text-center m-b-5 f-w-600\">\r\n                    Gracias por su compra\r\n                  </p>\r\n                  <p className=\"text-center\">\r\n                    <span className=\"m-r-10\"><i className=\"fa fa-fw fa-lg fa-globe\"></i> CodiGo</span>\r\n                    <span className=\"m-r-10\"><i className=\"fa fa-fw fa-lg fa-phone-volume\"></i> 978541232</span>\r\n                    <span className=\"m-r-10\"><i className=\"fa fa-fw fa-lg fa-envelope\"></i> jorgegarba@gmail.com</span>\r\n                  </p>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-success btn-lg\" onClick={() => {\r\n            pagarContext(\"efectivo\").then(rpta => {\r\n              if (rpta) {\r\n                setMostrar(false);\r\n              }\r\n            })\r\n          }}>\r\n            PAGO EFECTIVO\r\n          </button>\r\n\r\n          <button className=\"btn btn-info btn-lg\" onClick={() => {\r\n            pagarContext(\"visa\", datosPersonales).then(rpta => {\r\n              if (rpta) {\r\n                setMostrar(false);\r\n              }\r\n            })\r\n          }}>\r\n            <i className=\"fab fa-cc-visa \"></i>\r\n          </button>\r\n\r\n          <ReactToPrint\r\n            trigger={() => <button className=\"btn btn-primary btn-lg\"><i className=\"fas fa-print    \"></i></button>}\r\n            content={() => boletaRef.current} />\r\n        </Modal.Footer>\r\n      </Modal >\r\n    ) : null\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default PosModalInvoice\r\n","import React from 'react'\r\n\r\nconst PosBoletaItem = ({ objItem }) => {\r\n  return (\r\n    <li className=\"comanda__item\">\r\n      <p className=\"comanda__nombre\">\r\n        <span><strong>{objItem.plato_nom}</strong></span>\r\n        <span>Precio: S/ {objItem.plato_pre}</span>\r\n      </p>\r\n      <p className=\"comanda__cantidad\">{objItem.plato_cant}</p>\r\n      <p className=\"comanda__precio\">\r\n        <strong>S/ {objItem.plato_cant * +objItem.plato_pre}</strong>\r\n      </p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosBoletaItem\r\n","import React, { useContext, useState } from 'react'\r\nimport PosContext from '../../../../../context/posContext';\r\nimport PosModalInvoice from '../../components/PosModalInvoice';\r\nimport PosBoletaItem from './PosBoletaItem'\r\n\r\n\r\nconst PosBoleta = () => {\r\n\r\n  const { pedidos, objMesaGlobal } = useContext(PosContext);\r\n  const [mostrar, setMostrar] = useState(false);\r\n\r\n  let items = [];\r\n\r\n  // si existe una mesa global seleccionada, entonces\r\n  // obtener el valor del arreglo de PLATOS de esa mesa\r\n  if (objMesaGlobal) {\r\n    // encontrando el objeto que tiene la mesa global seleccionada\r\n    let objPedidoActual = pedidos.find((objPedido) => objPedido.mesa_id === objMesaGlobal.mesa_id);\r\n    // si el objetoPedidoActual existe (lo cual implica que existe un pedido para la mesa global seleccionada)\r\n    if (objPedidoActual) {\r\n      // tomamos sus platos en el arreglo items\r\n      items = objPedidoActual.platos;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"boleta\">\r\n      <h3>Pedido Mesa: &nbsp;\r\n        <span className=\"color-secundario\">\r\n          {objMesaGlobal ? objMesaGlobal.mesa_nro : \"Seleccione\"}\r\n        </span>\r\n      </h3>\r\n      <hr />\r\n      <div className=\"comanda\">\r\n        <h4 className=\"comanda__mesa\">\r\n\r\n          {objMesaGlobal ? \"Mesa \" + objMesaGlobal.mesa_nro : \"Seleccione\"}\r\n        </h4>\r\n        <p className=\"comanda__usuario\">Carlos Jimenez</p>\r\n        <hr />\r\n\r\n        <ul className=\"comanda__lista\">\r\n          {\r\n            items.map(objItem => {\r\n              return <PosBoletaItem key={objItem.plato_id}\r\n                objItem={objItem} />\r\n            })\r\n          }\r\n        </ul>\r\n        <button className=\"boton boton-success boton-block\" onClick={() => {\r\n          setMostrar(true);\r\n        }}>\r\n          PAGAR\r\n        </button>\r\n      </div>\r\n      <PosModalInvoice mostrar={mostrar}\r\n        setMostrar={setMostrar} />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default PosBoleta\r\n","import axios from \"axios\"\r\nimport { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const getCategorias = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/categoria`);\r\n  return rpta;\r\n}\r\n\r\nexport const getPlatosByCategoriaId = async (categoria_id) => {\r\n\r\n  const rpta = await axios.get(`${URL_BACKEND}/categoria/${categoria_id}/platos`);\r\n  return rpta;\r\n\r\n}","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/posContext';\r\n\r\nconst PosCategoria = ({ objCategoria }) => {\r\n\r\n  const { objCategoriaGlobal, setObjCategoriaGlobal } = useContext(PosContext);\r\n\r\n\r\n\r\n  return (\r\n    <li className={objCategoria.categoria_id === objCategoriaGlobal?.categoria_id ? \"active\" : \"\"}\r\n      onClick={() => {\r\n        setObjCategoriaGlobal({ ...objCategoria });\r\n      }}>\r\n      <img src=\"/imagenes/plato_blanco.svg\" alt=\"\" />\r\n      <span>{objCategoria.categoria_nom}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosCategoria\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getCategorias } from '../../../../../services/categoriaService';\r\nimport PosCategoria from './PosCategoria'\r\n\r\nconst PosCategorias = () => {\r\n\r\n  const [categorias, setCategorias] = useState([]);\r\n  useEffect(() => {\r\n    getCategorias().then((rpta) => {\r\n      if (rpta.data.ok) {\r\n        setCategorias(rpta.data.content);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul className=\"menu__lista\">\r\n        {categorias.map((objCategoria) => {\r\n          return <PosCategoria key={objCategoria.categoria_id}\r\n            objCategoria={objCategoria} />\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default PosCategorias\r\n","import axios from \"axios\";\r\n\r\nimport { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getMesas = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/mesa`);\r\n  return rpta\r\n}\r\n\r\nexport const putMesaById = async (objMesa) => {\r\n\r\n  const rpta = await axios.put(\r\n    `${URL_BACKEND}/mesa/${objMesa.mesa_id}`,\r\n    JSON.stringify(objMesa),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    }\r\n  )\r\n  return rpta;\r\n\r\n}\r\n\r\nexport const postMesa = async (objMesa) => {\r\n  const rpta = axios.post(\r\n    `${URL_BACKEND}/mesa`,\r\n    JSON.stringify(objMesa),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    }\r\n  );\r\n  return rpta;\r\n}\r\n\r\nexport const deleteMesaById = async (mesa_id) => {\r\n  const rpta = await axios.delete(`${URL_BACKEND}/mesa/${mesa_id}`);\r\n  return rpta;\r\n}\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/posContext'\r\n\r\n\r\nconst PosMesa = ({ objMesa }) => {\r\n\r\n  const { objMesaGlobal, setObjMesaGlobal } = useContext(PosContext);\r\n\r\n\r\n  return (\r\n    // <li className=\"mesas__mesa activo\">\r\n    <li className={`mesas__mesa ${objMesaGlobal?.mesa_id === objMesa.mesa_id ? \"activo\" : \"\"}`}\r\n      onClick={() => {\r\n        setObjMesaGlobal({ ...objMesa });\r\n      }}>\r\n      <span className=\"mesas__titulo\">Mesa</span>\r\n      <span className=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosMesa\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getMesas } from '../../../../../services/mesaService';\r\nimport PosMesa from './PosMesa'\r\n\r\nconst PosMesas = () => {\r\n\r\n  const [mesas, setMesas] = useState([]);\r\n  useEffect(() => {\r\n    getMesas().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        setMesas(rpta.data.content);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"mesas\">\r\n      <ul className=\"mesas__lista\">\r\n        {\r\n          mesas.map((objMesa) => {\r\n            return <PosMesa key={objMesa.mesa_id} objMesa={objMesa} />\r\n          })\r\n        }\r\n      </ul>\r\n      <div className=\"mesas__info\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosMesas\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/posContext';\r\n\r\nconst PosPlato = ({ objPlato }) => {\r\n\r\n  const { modificarPlatoContext } = useContext(PosContext);\r\n\r\n  return (\r\n    <div className=\"carta__plato\">\r\n      <img\r\n        src={objPlato.plato_img}\r\n        alt=\"\" />\r\n      <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n      <span className=\"carta__precio\">S/ {(+objPlato.plato_pre).toFixed(2)}</span>\r\n      <div className=\"carta__botones\">\r\n        <button className=\"boton boton-outline-primary boton-restar\"\r\n          onClick={() => {\r\n            modificarPlatoContext({ ...objPlato }, \"restar\")\r\n          }}>\r\n          -1\r\n        </button>\r\n        <button className=\"boton boton-outline-primary boton-sumar\"\r\n          onClick={() => {\r\n            modificarPlatoContext({ ...objPlato }, \"sumar\");\r\n          }}>\r\n          +1\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosPlato\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PosContext from '../../../../../context/posContext';\r\nimport { getPlatosByCategoriaId } from '../../../../../services/categoriaService';\r\nimport PosPlato from './PosPlato'\r\n\r\nconst PosPlatos = () => {\r\n\r\n  const [platos, setPlatos] = useState([]);\r\n  const { objCategoriaGlobal } = useContext(PosContext);\r\n\r\n  useEffect(() => {\r\n    if (objCategoriaGlobal) {\r\n      getPlatosByCategoriaId(objCategoriaGlobal.categoria_id).then(rpta => {\r\n        if (rpta.data.ok) {\r\n          setPlatos(rpta.data.content.Platos);\r\n        }\r\n      })\r\n    }\r\n  }, [objCategoriaGlobal]);\r\n\r\n  return (\r\n    <div className=\"carta\">\r\n      <h3>Lista de Platos Categoria: &nbsp;\r\n        <span className=\"color-secundario\">\r\n          {objCategoriaGlobal ? objCategoriaGlobal.categoria_nom : \"Seleccione una categoría\"}\r\n        </span>\r\n      </h3>\r\n\r\n      <div className=\"carta__platos\">\r\n        {\r\n          platos.map((objPlato) => {\r\n            return <PosPlato key={objPlato.plato_id} objPlato={objPlato} />\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosPlatos\r\n","import React from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport PosHeader from '../components/PosHeader'\r\nimport PosBoleta from './components/PosBoleta'\r\nimport PosCategorias from './components/PosCategorias'\r\nimport PosMesas from './components/PosMesas'\r\nimport PosPlatos from './components/PosPlatos'\r\n\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst PosTerminalScreen = (props) => {\r\n  let search = window.location.hash.split(\"?\")[1];\r\n  let params = new URLSearchParams(search);\r\n  if (params.get(\"payment_info\") === \"success\") {\r\n    Swal.fire({\r\n      icon: \"success\",\r\n      title: \"Hecho!\",\r\n      text: \"El pago se ha realizado correctamente\",\r\n      timer: 3000,\r\n      allowOutsideClick: false,\r\n      showConfirmButton: false,\r\n    }).then(() => {\r\n      props.history.replace(\"/pos/terminal\")\r\n    })\r\n  } else if (params.get(\"payment_info\") === \"failed\") {\r\n    Swal.fire({\r\n      icon: \"error\",\r\n      title: \"Ups!\",\r\n      text: \"Hubo un error al procesar el pago\",\r\n      timer: 3000,\r\n      allowOutsideClick: false,\r\n      showConfirmButton: false,\r\n\r\n    }).then(() => {\r\n      props.history.replace(\"/pos/terminal\")\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <PosHeader />\r\n      <main className=\"pos-container\">\r\n        <PosCategorias />\r\n        <section className=\"tabla\">\r\n          <PosMesas />\r\n          <div className=\"pedido\">\r\n            <PosPlatos />\r\n            <PosBoleta />\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(PosTerminalScreen)\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport PosState from '../../context/posState';\r\nimport PosTerminalScreen from './pages/terminal/PosTerminalScreen';\r\n\r\nconst PosRouter = () => {\r\n  return (\r\n    <PosState>\r\n      <Switch>\r\n        <Route path=\"/pos/terminal\">\r\n          <PosTerminalScreen />\r\n        </Route>\r\n      </Switch>\r\n    </PosState>\r\n  )\r\n}\r\n\r\nexport default PosRouter\r\n","import React, { useContext } from 'react'\r\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\"\r\nimport AuthContext from '../../../context/authContext';\r\nconst AdminHeader = () => {\r\n\r\n  const { cerrarSesion } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n\r\n          <NavLink to=\"/admin\" className=\"nav-link\" activeClassName={\"active\"} exact>Dashboard</NavLink>\r\n          <NavLink to=\"/admin/mesa\" className=\"nav-link\" activeClassName={\"active\"} exact>Mesas</NavLink>\r\n          <NavLink to=\"/admin/plato\" className=\"nav-link\" activeClassName={\"active\"} exact>Platos</NavLink>\r\n          <NavLink to=\"/admin/pedido\" className=\"nav-link\" activeClassName={\"active\"} exact>Pedidos</NavLink>\r\n\r\n        </Nav>\r\n        <Form inline>\r\n          <Button variant=\"outline-danger\" onClick={cerrarSesion}>Cerrar Sesión</Button>\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Doughnut, Line } from \"react-chartjs-2\"\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { URL_BACKEND } from '../../../../environments/environments';\r\n\r\nconst AdminDashboardScreen = () => {\r\n\r\n  const [mesas, setMesas] = useState(0)\r\n  const [pedidos, setPedidos] = useState(0)\r\n  const [categorias, setCategorias] = useState(0)\r\n  const [totalMoney, setTotalMoney] = useState(0)\r\n  const [pedidoPlatos, setPedidoPlatos] = useState({\r\n    labels: [],\r\n    valores: []\r\n  })\r\n\r\n\r\n  const data = {\r\n    labels: ['Mesas', 'Pedidos', 'Categorías'],\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: [mesas, pedidos, categorias],\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const dataLine = {\r\n    labels: pedidoPlatos.labels,\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: pedidoPlatos.valores,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const socket = socketIOClient(URL_BACKEND);\r\n    socket.on(\"reporte-dashboard\", (data) => {\r\n\r\n      const dataJSON = JSON.parse(data);\r\n      console.log(dataJSON);\r\n\r\n      let pedidoPlatosTmp = dataJSON.pedidosCompletos.slice(-10);\r\n      let labels = pedidoPlatosTmp.map((objPedido) => {\r\n        return objPedido.pedido_est.split(\" \")[0]\r\n      })\r\n      let valores = pedidoPlatosTmp.map((objPedido) => {\r\n        return objPedido.PedidoPlatos.reduce((prev, objPedidoPlato) => {\r\n          return prev + (+objPedidoPlato.pedidoplato_cant * (+objPedidoPlato.Plato?.plato_pre || 0))\r\n        }, 0)\r\n      })\r\n\r\n      setPedidoPlatos({ labels, valores });\r\n\r\n\r\n      setMesas(dataJSON.totales.mesas);\r\n      setPedidos(dataJSON.totales.pedidos);\r\n      setCategorias(dataJSON.totales.categorias);\r\n      setTotalMoney(dataJSON.total_caja.totalMoney)\r\n    });\r\n\r\n    socket.emit(\"peticion-reporte-dashboard\");\r\n\r\n    // cleanup del useEffect\r\n    // La función de cleanup se ejecuta cuando un componente es desmontado\r\n    // Se debe usar para cancelar peticiones asincronas, liberar memoria, cancelación\r\n    // de sockets, etc\r\n    return () => {\r\n      socket.disconnect();\r\n    }\r\n\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"container-fluid bg-light \" style={{ minHeight: \"calc(100vh - 56px)\" }}>\r\n      <div className=\"row pt-4\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-3 text-center\">Dashboard Administrativo</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card shadow bg-dark text-white\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Total de Mesas</h5>\r\n                </div>\r\n                <div className=\"card-body text-center\">\r\n                  <span className=\"display-4\">{mesas}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card shadow bg-success text-white\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Total de Pedidos</h5>\r\n                </div>\r\n                <div className=\"card-body text-center\">\r\n                  <span className=\"display-4\">{pedidos}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <div className=\"card shadow bg-info text-white\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Total de Categorias</h5>\r\n                </div>\r\n                <div className=\"card-body text-center\">\r\n                  <span className=\"display-4\">{categorias}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <div className=\"card shadow \">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Total Ingresos</h5>\r\n                </div>\r\n                <div className=\"card-body text-center\">\r\n                  <p className=\"display-1\">\r\n                    S/ <span>{totalMoney.toFixed(2)}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <div className=\"card shadow bg-dark text-white\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Pedidos</h5>\r\n                </div>\r\n                <div className=\"card-body text-center\">\r\n                  <Line data={dataLine} height={250} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card bg-dark text-white shadow \">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Total Ingresos</h5>\r\n                </div>\r\n                <div className=\"card-body text-center\">\r\n                  <Doughnut data={data} />\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AdminDashboardScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Modal } from \"react-bootstrap\"\r\nimport { putMesaById } from '../../../services/mesaService';\r\n\r\nconst AdminModalEditarMesa = ({\r\n  mostrarModalEditar,\r\n  setMostrarModalEditar,\r\n  objMesaEditar,\r\n  traerMesas }) => {\r\n\r\n  const [formulario, setFormulario] = useState(objMesaEditar);\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    setFormulario({ ...objMesaEditar })\r\n  }, [objMesaEditar])\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    putMesaById(formulario).then(rpta => {\r\n      if (rpta.data.ok) {\r\n        alert(\"Mesa editada correctamente\");\r\n        setMostrarModalEditar(false);\r\n        traerMesas();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal show={mostrarModalEditar} onHide={() => {\r\n      // settear objMesaEditar a null nuevamente\r\n      setMostrarModalEditar(false)\r\n    }} size={\"xl\"} >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Editar Mesa</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {\r\n          formulario ?\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Id:</label>\r\n                <input type=\"text\" className=\"form-control\" value={formulario.mesa_id} disabled />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Nro Mesa:</label>\r\n                <input type=\"text\" className=\"form-control\"\r\n                  value={formulario.mesa_nro} name=\"mesa_nro\" onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Capacidad:</label>\r\n                <input type=\"number\" className=\"form-control\"\r\n                  value={formulario.mesa_cap} name=\"mesa_cap\" onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">Guardar Cambios</button>\r\n              </div>\r\n            </form> : null\r\n        }\r\n\r\n      </Modal.Body>\r\n\r\n    </Modal >\r\n  )\r\n}\r\n\r\nexport default AdminModalEditarMesa\r\n","import React, { useState } from 'react'\r\nimport { Modal } from \"react-bootstrap\"\r\nimport { postMesa } from '../../../services/mesaService';\r\n\r\n\r\nconst formularioVacio = {\r\n  mesa_cap: \"\",\r\n  mesa_nro: 0\r\n}\r\n\r\n\r\nconst AdminModalCrearMesa = ({ mostrarModalCrear, setMostrarModalCrear, traerMesas }) => {\r\n\r\n  const [formulario, setFormulario] = useState({ ...formularioVacio });\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    postMesa(formulario).then((rpta) => {\r\n      if (rpta.data.ok) {\r\n        setMostrarModalCrear(false);\r\n        setFormulario(formularioVacio);\r\n        traerMesas();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal show={mostrarModalCrear} onHide={() => {\r\n      setMostrarModalCrear(false)\r\n    }} size={\"xl\"} >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Crear Mesa</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Nro Mesa:</label>\r\n            <input type=\"text\" className=\"form-control\"\r\n              value={formulario.mesa_nro} name=\"mesa_nro\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Capacidad:</label>\r\n            <input type=\"number\" className=\"form-control\"\r\n              value={formulario.mesa_cap} name=\"mesa_cap\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">Crea Mesa</button>\r\n          </div>\r\n        </form>\r\n\r\n\r\n      </Modal.Body>\r\n\r\n    </Modal >\r\n  )\r\n}\r\n\r\nexport default AdminModalCrearMesa\r\n","import React, { useEffect, useState } from 'react'\r\nimport { deleteMesaById, getMesas } from '../../../../services/mesaService';\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport AdminModalEditarMesa from '../../components/AdminModalEditarMesa';\r\nimport AdminModalCrearMesa from '../../components/AdminModalCrearMesa';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst AdminMesaScreen = () => {\r\n\r\n  const [mostrarModalEditar, setMostrarModalEditar] = useState(false);\r\n  const [mostrarModalCrear, setMostrarModalCrear] = useState(false);\r\n  const [cargando, setCargando] = useState(true);\r\n  const [mesas, setMesas] = useState({\r\n    columns: [\r\n      { label: '#', field: 'posicion', },\r\n      { label: 'Id', field: 'mesa_id', },\r\n      { label: 'Nro Mesa', field: 'mesa_nro', },\r\n      { label: 'Capacidad', field: 'mesa_cap', },\r\n      { label: 'Acciones', field: 'acciones' }\r\n    ],\r\n    rows: [],\r\n  });\r\n  const [objMesaEditar, setObjMesaEditar] = useState(null);\r\n\r\n  const [mounted, setMounted] = useState(true);\r\n\r\n  const eliminarMesa = mesa_id => {\r\n    Swal.fire({\r\n      title: '¿Seguro que deseas eliminar la mesa?',\r\n      text: 'Los cambios serán irreversibles',\r\n      showCancelButton: true,\r\n      icon: 'error'\r\n    }).then((rpta) => {\r\n      if (rpta.isConfirmed) {\r\n        deleteMesaById(mesa_id).then(rpta => {\r\n          if (rpta.data.ok) {\r\n            Swal.fire({\r\n              text: 'Mesa eliminada correctamente',\r\n              icon: 'success',\r\n              timer: 1500\r\n            })\r\n            traerMesas();\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const traerMesas = () => {\r\n    setCargando(true);\r\n    getMesas().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        let mesasFormateadas = rpta.data.content.map((objMesa, i) => {\r\n          return {\r\n            ...objMesa,\r\n            mesa_cap: objMesa.mesa_cap + \" personas\",\r\n            posicion: i + 1,\r\n            acciones:\r\n              <>\r\n                <button className=\"btn btn-warning\" onClick={() => {\r\n                  setObjMesaEditar({ ...objMesa });\r\n                  setMostrarModalEditar(true);\r\n                }}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => {\r\n                  eliminarMesa(objMesa.mesa_id)\r\n                }}>\r\n                  Eliminar\r\n                </button>\r\n              </>\r\n          }\r\n        })\r\n\r\n        if (mounted) {\r\n          setMesas({ ...mesas, rows: mesasFormateadas })\r\n          setCargando(false);\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    traerMesas();\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <main className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"card shadow\">\r\n              <div className=\"card-body\">\r\n                <button className=\"btn btn-primary\" onClick={() => {\r\n                  setMostrarModalCrear(true);\r\n                }}>Crear Mesa</button>\r\n                <hr />\r\n                {\r\n                  cargando ?\r\n                    <div className=\"alert alert-info\">\r\n                      Cargando\r\n                  </div> :\r\n                    <MDBDataTableV5 data={mesas} />\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n\r\n      <AdminModalEditarMesa\r\n        mostrarModalEditar={mostrarModalEditar}\r\n        setMostrarModalEditar={setMostrarModalEditar}\r\n        objMesaEditar={objMesaEditar}\r\n        traerMesas={traerMesas}\r\n      />\r\n      <AdminModalCrearMesa\r\n        mostrarModalCrear={mostrarModalCrear}\r\n        setMostrarModalCrear={setMostrarModalCrear}\r\n        traerMesas={traerMesas} />\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminMesaScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getPedidos } from '../../../../services/pedidoService'\r\nimport { MDBDataTableV5 } from \"mdbreact\"\r\n\r\nconst AdminPedidoScreen = () => {\r\n\r\n  const [cargando, setCargando] = useState(true);\r\n  const [datos, setDatos] = useState({\r\n    columns: [\r\n      { label: \"#\", field: \"posicion\" },\r\n      { label: \"Id\", field: \"pedido_id\" },\r\n      { label: \"Fecha\", field: \"pedido_fech\" },\r\n      { label: \"Codigo\", field: \"pedido_nro\" },\r\n      { label: \"Estado\", field: \"pedido_est\" },\r\n      { label: \"Nro Mesa\", field: \"mesa_nro\" },\r\n      { label: \"Usuario\", field: \"usu_nombre\" },\r\n      { label: \"Acciones\", field: \"acciones\" }\r\n    ],\r\n    rows: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    getPedidos().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        let filas = rpta.data.pedidos.map((objPedido, i) => {\r\n          return {\r\n            ...objPedido,\r\n            posicion: i + 1,\r\n            mesa_nro: objPedido.Mesa?.mesa_nro || \"s/n\",\r\n            usu_nombre: (objPedido.Usuario?.usu_nom || \"\") + \" \" + (objPedido.Usuario?.usu_ape || \"\"),\r\n            acciones: <button>Ver Detalles</button>\r\n          }\r\n        });\r\n        setDatos({ ...datos, rows: [...filas] })\r\n        setCargando(false);\r\n      }\r\n    })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-4\">\r\n            Lista de Pedidos\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {\r\n        !cargando ?\r\n          <MDBDataTableV5 data={datos} /> :\r\n          <div className=\"alert alert-info\">\r\n            <h4>CARGANDO...</h4>\r\n          </div>\r\n      }\r\n\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AdminPedidoScreen\r\n","import axios from \"axios\"\r\nimport { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const getPlatos = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/plato`);\r\n  return rpta;\r\n}\r\n\r\nexport const postPlato = async (objPlato) => {\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/plato`,\r\n    JSON.stringify(objPlato),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    }\r\n  );\r\n  return rpta;\r\n}\r\n\r\nexport const postUploadImagenByPlatoId = async (file, plato_id) => {\r\n\r\n  let miFormData = new FormData();\r\n  miFormData.append(\"imagen\", file);\r\n  miFormData.append(\"plato_id\", plato_id);\r\n\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/plato/imagen/upload`,\r\n    miFormData,\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"multipart/form-data\"\r\n      }\r\n    }\r\n  );\r\n  return rpta;\r\n\r\n}","import React, { useEffect, useState, useRef } from 'react'\r\nimport { getCategorias } from '../../../../services/categoriaService';\r\nimport { postPlato, postUploadImagenByPlatoId } from '../../../../services/platoService';\r\n\r\nconst AdminPlatoCrearScreen = () => {\r\n\r\n  const [formulario, setFormulario] = useState({\r\n    plato_nom: \"\",\r\n    plato_img: \"\",\r\n    plato_pre: 0,\r\n    categoria_id: 0\r\n  })\r\n\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  const imagenRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    getCategorias().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        setCategorias(rpta.data.content);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  const handleChange = e => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    postPlato(formulario).then(rpta => {\r\n      if (rpta.data.ok) {\r\n        postUploadImagenByPlatoId(imagenRef.current.files[0], rpta.data.content.plato_id)\r\n          .then((rpta2) => {\r\n            console.log(rpta2);\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h4>Formulario de Creación de un Plato</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Nombre:</label>\r\n                  <input type=\"text\" className=\"form-control\"\r\n                    value={formulario.plato_nom}\r\n                    name=\"plato_nom\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Precio:</label>\r\n                  <input type=\"number\" className=\"form-control\"\r\n                    value={formulario.plato_pre}\r\n                    name=\"plato_pre\"\r\n                    onChange={handleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Categoria</label>\r\n                  <select className=\"form-control\"\r\n                    value={formulario.categoria_id}\r\n                    name=\"categoria_id\"\r\n                    onChange={handleChange}>\r\n                    <option value=\"0\">Seleccione</option>\r\n                    {\r\n                      categorias.map((objCategoria, i) => {\r\n                        return <option key={i} value={objCategoria.categoria_id}>\r\n                          {objCategoria.categoria_nom}\r\n                        </option>\r\n                      })\r\n                    }\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Imagen</label>\r\n                  <input type=\"file\" ref={imagenRef} accept=\"image/*\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Crear Plato\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AdminPlatoCrearScreen\r\n","import { MDBDataTableV5 } from 'mdbreact';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getPlatos } from '../../../../services/platoService';\r\nimport { Link } from \"react-router-dom\"\r\n// import { withRouter } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst platosInicial = {\r\n  columns: [\r\n    { label: '#', field: 'posicion', },\r\n    { label: 'Id', field: 'plato_id', },\r\n    { label: 'Nombre', field: 'plato_nom', },\r\n    { label: 'Imagen', field: 'plato_img', },\r\n    { label: 'Precio', field: 'plato_pre' },\r\n    { label: 'Categoria', field: 'categoria_nom' }\r\n  ],\r\n  rows: [],\r\n}\r\n\r\n\r\nconst AdminPlatoScreen = () => {\r\n\r\n  const [cargando, setCargando] = useState(true);\r\n  const [platos, setPlatos] = useState(platosInicial);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    getPlatos().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        if (mounted) {\r\n          setPlatos({\r\n            ...platosInicial,\r\n            rows: rpta.data.content.map((objPlato, i) => {\r\n              return {\r\n                posicion: i + 1,\r\n                plato_id: objPlato.plato_id,\r\n                plato_nom: objPlato.plato_nom,\r\n                plato_img: <img src={objPlato.plato_img} width=\"100\" alt={objPlato.plato_nom} />,\r\n                plato_pre: `S/ ${(+objPlato.plato_pre).toFixed(2)}`,\r\n                categoria_nom: objPlato.Categorium?.categoria_nom || \"Sin categoria\"\r\n              }\r\n            })\r\n          });\r\n          setCargando(false);\r\n        }\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      mounted = false\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body\">\r\n              <Link className=\"btn btn-primary\" to=\"/admin/plato/crear\">\r\n                Crear Plato\r\n              </Link>\r\n              <hr />\r\n              {\r\n                cargando ?\r\n                  <div className=\"alert alert-info\">\r\n                    Cargando\r\n                  </div> :\r\n                  <MDBDataTableV5 data={platos} bordered hover striped />\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n// export default withRouter(AdminPlatoScreen)\r\nexport default AdminPlatoScreen\r\n","import React from 'react'\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport AdminHeader from './components/AdminHeader'\r\nimport AdminDashboardScreen from './pages/dashboard/AdminDashboardScreen'\r\nimport AdminMesaScreen from './pages/mesa/AdminMesaScreen'\r\nimport AdminPedidoScreen from './pages/pedido/AdminPedidoScreen'\r\nimport AdminPlatoCrearScreen from './pages/plato/AdminPlatoCrearScreen'\r\nimport AdminPlatoScreen from './pages/plato/AdminPlatoScreen'\r\n\r\nconst AdminRouter = () => {\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <Switch>\r\n        <Route path=\"/admin/mesa\">\r\n          <AdminMesaScreen />\r\n        </Route>\r\n        <Route path=\"/admin/plato/crear\" >\r\n          <AdminPlatoCrearScreen />\r\n        </Route>\r\n        <Route path=\"/admin/plato\" >\r\n          <AdminPlatoScreen />\r\n        </Route>\r\n        <Route path=\"/admin/pedido\" >\r\n          <AdminPedidoScreen />\r\n        </Route>\r\n        <Route path=\"/admin\" exact>\r\n          <AdminDashboardScreen />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminRouter\r\n","import axios from \"axios\";\r\nimport { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const postLogin = async (objLogin) => {\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/login`,\r\n    JSON.stringify(objLogin), {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return rpta;\r\n}\r\n\r\nexport const postVerificar = async (token) => {\r\n\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/verificar`,\r\n    null, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${token}`\r\n    }\r\n  });\r\n  return rpta\r\n\r\n}","import React from 'react'\r\n\r\nconst GlobalLoading = () => {\r\n  return (\r\n    <div className=\"global-loading text-white\" style={{\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      flexDirection: \"column\",\r\n      width: \"100vw\",\r\n      minHeight: \"100vh\",\r\n      zIndex: \"1000\",\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      top: \"0\",\r\n      backgroundColor: \"rgba(0,0,0,0.7)\"\r\n    }}>\r\n\r\n      <i class=\"fas fa-spinner   fa-spin fa-3x \"></i>\r\n      <p className=\"display-4 mt-3\">CARGANDO...</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GlobalLoading\r\n","import React, { useContext, useState } from 'react'\r\nimport AuthContext from '../../../context/authContext';\r\nimport { postLogin } from '../../../services/authService';\r\nimport { withRouter } from \"react-router-dom\"\r\nimport GlobalLoading from '../../../components/GlobalLoading';\r\n\r\nconst AuthLoginScreen = ({ history }) => {\r\n\r\n  const [formulario, setFormulario] = useState({\r\n    correo: \"\",\r\n    password: \"\",\r\n  });\r\n  const { iniciarSesionContext } = useContext(AuthContext);\r\n  const [cargando, setCargando] = useState(false)\r\n  const handleChange = e => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setCargando(true);\r\n    postLogin(formulario).then(rpta => {\r\n      if (rpta.data.ok) {\r\n        iniciarSesionContext(rpta.data.token);\r\n        // debemos redireccionar al admin, o al punto de venta\r\n        let { token } = rpta.data;\r\n        let payloadString = token.split(\".\")[1];\r\n        let payloadDecoded = atob(payloadString);\r\n        let payloadJSON = JSON.parse(payloadDecoded);\r\n        setCargando(false);\r\n        if (payloadJSON.usu_tipo === \"admin\") {\r\n          history.push(\"/admin\")\r\n        } else {\r\n          history.push(\"/pos/terminal\")\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>{\r\n      cargando && <GlobalLoading />\r\n    }\r\n      <main className=\"login\">\r\n        <div className=\"login__form\">\r\n          <h1>Inicio de Sesión</h1>\r\n          <form className=\"formulario\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"\">Email:</label>\r\n            <input\r\n              name=\"correo\"\r\n              onChange={handleChange}\r\n              value={formulario.correo}\r\n              type=\"email\"\r\n              className=\"formulario__input\"\r\n              placeholder=\"Email\" />\r\n            <label htmlFor=\"\">Password:</label>\r\n            <input\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={formulario.password}\r\n              type=\"password\"\r\n              className=\"formulario__input\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <button className=\"formulario__submit\" type=\"submit\">\r\n              Iniciar Sesión\r\n          </button>\r\n          </form>\r\n        </div>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(AuthLoginScreen)\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AuthLoginScreen from './pages/AuthLoginScreen';\r\nconst AuthRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/auth/login\">\r\n        <AuthLoginScreen />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default AuthRouter\r\n","\r\n\r\nexport const authReducer = (stateAntiguo, payload) => {\r\n\r\n  if (payload.action === \"INICIAR_SESION\") {\r\n    return {\r\n      ...payload.data\r\n    }\r\n  }\r\n  if (payload.action === \"CERRAR_SESION\") {\r\n    localStorage.removeItem(\"token\");\r\n    return {\r\n      autenticado: false,\r\n      cargando: false,\r\n      usu_nom: null,\r\n      token: null,\r\n      usu_id: null,\r\n      usu_tipo: null\r\n    }\r\n\r\n  }\r\n\r\n}","import React, { useEffect, useReducer } from 'react'\r\nimport AuthContext from './authContext'\r\nimport { authReducer } from './authReducer'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { postVerificar } from '../services/authService'\r\n\r\nconst initialState = {\r\n  autenticado: false,\r\n  cargando: true,\r\n  token: null,\r\n  usu_nom: null,\r\n  usu_id: null,\r\n  usu_tipo: null\r\n}\r\n\r\n\r\nconst AuthState = (props) => {\r\n\r\n  const [state, setState] = useReducer(authReducer, initialState);\r\n\r\n\r\n\r\n  const iniciarSesionContext = (token) => {\r\n\r\n    localStorage.setItem(\"token\", token);\r\n    let payloadString = token.split(\".\")[1];\r\n    let payloadStringDecript = atob(payloadString);\r\n    let payloadJson = JSON.parse(payloadStringDecript);\r\n\r\n    setState(\r\n      {\r\n        action: \"INICIAR_SESION\",\r\n        data: {\r\n          autenticado: true,\r\n          cargando: false,\r\n          token: token,\r\n          usu_nom: payloadJson.usu_nom,\r\n          usu_id: payloadJson.usu_id,\r\n          usu_tipo: payloadJson.usu_tipo\r\n        }\r\n      }\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\n  const iniciarSesionConLocalStorage = () => {\r\n\r\n    let token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      postVerificar(token).then(rpta => {\r\n        if (rpta.data.ok) {\r\n          iniciarSesionContext(token)\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n        cerrarSesion();\r\n      })\r\n    } else {\r\n      cerrarSesion();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    iniciarSesionConLocalStorage();\r\n\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  const cerrarSesion = () => {\r\n    setState({\r\n      action: \"CERRAR_SESION\"\r\n    })\r\n    //props.history.replace(\"ruta\"), similar al \"push\"\r\n    // pero no deja historial de las páginas visitaras anteriormente\r\n    // para no hacer un \"atrás!\"\r\n    // props.history.replace(\"/\");\r\n  }\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      iniciarSesionContext,\r\n      cerrarSesion,\r\n      ...state\r\n    }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default withRouter(AuthState)\r\n","import React, { useContext } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport GlobalLoading from './components/GlobalLoading'\r\nimport AuthContext from './context/authContext'\r\n\r\nconst PrivateRoute = (props) => {\r\n\r\n  const { autenticado, cargando, usu_tipo } = useContext(AuthContext)\r\n\r\n  return (\r\n\r\n    cargando ?\r\n      <GlobalLoading /> :\r\n      autenticado ?\r\n\r\n        (usu_tipo === \"admin\" && props.path.startsWith(\"/admin\")) ||\r\n          (usu_tipo === \"ventas\" && props.path.startsWith(\"/pos\")) ?\r\n\r\n          <Route path={props.path}>\r\n            {props.children}\r\n          </Route> :\r\n\r\n          < Redirect to={\"/\"} />\r\n        :\r\n        <Redirect to={\"/\"} />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst GuestHomeScreen = () => {\r\n  return (\r\n    <main className=\"container-fluid\">\r\n\r\n      <div className=\"row bg-dark justify-content-center align-items-center bg-home\" style={{\r\n        minHeight: \"100vh\"\r\n      }}>\r\n        <div className=\"col-12\">\r\n          <h1 className=\"display-3 text-light text-center\">\r\n            Sistema de Punto de Venta Codi<span className=\"text-white\">Go</span>\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 col-lg-6 col-xl-3 \">\r\n          <Link to=\"/admin\">\r\n            <div className=\"card py-5 shadow bg-warning text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">\r\n                  Admin\r\n              </h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-6 col-lg-6 col-xl-3 \">\r\n          <Link to=\"/pos/terminal\">\r\n            <div className=\"card py-5 shadow bg-info text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">\r\n                  POS\r\n              </h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-6 col-lg-6 col-xl-3 \">\r\n          <Link to=\"/auth/login\">\r\n            <div className=\"card py-5 shadow bg-danger text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">\r\n                  Login\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default GuestHomeScreen\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport GuestHomeScreen from './pages/GuestHomeScreen'\r\n\r\nconst GuestRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\">\r\n        <GuestHomeScreen />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default GuestRouter\r\n","import React from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport \"./styles/index.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./styles/invoice.css\"\nimport \"./styles/login.css\"\n\nimport PosRouter from './modules/pos/PosRouter';\nimport AdminRouter from './modules/admin/AdminRouter';\nimport AuthRouter from './modules/auth/AuthRouter';\nimport AuthState from './context/authState';\nimport PrivateRoute from './PrivateRoute';\nimport GuestRouter from './modules/guest/GuestRouter';\n\nconst App = () => {\n  return (\n    <Router>\n      <AuthState>\n        <Switch>\n          <PrivateRoute path=\"/pos\">\n            <PosRouter />\n          </PrivateRoute>\n          <PrivateRoute path=\"/admin\">\n            <AdminRouter />\n          </PrivateRoute>\n          <Route path=\"/auth\">\n            <AuthRouter />\n          </Route>\n          <Route path=\"/\" exact>\n            <GuestRouter />\n          </Route>\n        </Switch>\n      </AuthState>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}